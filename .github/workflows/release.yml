name: Publish

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release Type'
        required: true
        type: choice
        default: 'patch'
        options:
          - patch
          - minor
          - major
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}
      - name: Setup Node version
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm ci
      - name: Build Package
        run: npm run compile
      - name: Setup Git
        run: |
          git config --global user.name "vhdl-linter-bot"
          git config --global user.email "vhdl-linter-bot@niklas-schelten.de"
      - name: Get Current Version Number
        run: |
          CURRENT_VERSION=$(npx vsce show g0t00.vhdl-linter --json | jq -r '.versions[0].version')
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
      - name: Create Changelog
        run: |
          git log $CURRENT_VERSION..HEAD --oneline &> ${{ github.workspace }}-CHANGELOG.txt
          cat ${{ github.workspace }}-CHANGELOG.txt

      - name: Compile New Version
        run: |
          RELEASE_VERSION=$(npx semver $CURRENT_VERSION -i ${{ inputs.releaseType }})
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          echo "Bump to $RELEASE_VERSION"
      - name: Version Package
        run: |
          npm version $RELEASE_VERSION
          git tag -a $RELEASE_VERSION -m "$RELEASE_VERSION"
      - name: Package Extension (Stable)
        run: npx vsce package $RELEASE_VERSION --no-git-tag-version --no-update-package-json -o "./vhdl-linter-$RELEASE_VERSION.vsix"
      - name: Publish to Visual Studio Marketplace
        run: npx vsce publish --packagePath "./vhdl-linter-$RELEASE_VERSION.vsix" --no-git-tag-version --no-update-package-json -p  ${{ secrets.VSC_MKTP_PAT }}
      - name: Push Tags
        run: |
          git log -1 --stat
          git push origin --tags
      - run: |
          export GIT_TAG=$(git describe --tags --abbrev=0)
          echo "GIT_TAG=$GIT_TAG" >> $GITHUB_ENV
      - name: GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: './vhdl-linter-*'
          bodyFile: ${{ github.workspace }}-CHANGELOG.txt
          tag: ${{ env.GIT_TAG }}
  release-npm:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      - run: |
          npm ci
          npx ts-node scripts/prepareNpmRelease.ts
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_TOKEN }}
