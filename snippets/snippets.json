{
	"arch": {
		"prefix": "arch",
		"body": "architecture ${2:arch} of ${1:ent} is\nbegin\n\t$0\nend architecture;",
		"description": "architecture",
		"scope": "source.vhdl"
	},
	"case": {
		"prefix": "case",
		"body": "case ${1:object} is\n\twhen ${2:choice} =>\n\t\t$0\n\twhen others =>\nend case;",
		"description": "case",
		"scope": "source.vhdl"
	},
	"caseg": {
		"prefix": "caseg",
		"body": "${1:label}: case ${2:object} generate\n\twhen ${3:choice} =>\n\t\t$0\n\twhen others =>\nend generate;",
		"description": "case",
		"scope": "source.vhdl"
	},
	"ent": {
		"prefix": "ent",
		"body": "entity ${1:ent} is\n\tport (\n\t\t$0\n\t);\nend entity;",
		"description": "entity",
		"scope": "source.vhdl"
	},
	"entarch": {
		"prefix": "entarch",
		"body": "entity ${1:ent} is\n\tport (\n\t\t$0\n\t);\nend entity;\narchitecture ${2:arch} of ${1:ent} is\nbegin\nend architecture;",
		"description": "entity + architecture",
		"scope": "source.vhdl"
	},
	"for": {
		"prefix": "for",
		"body": "for ${1:i} in ${2:range} loop\n\t$0\nend loop;",
		"description": "for loop",
		"scope": "source.vhdl"
	},
	"forg": {
		"prefix": "forg",
		"body": "${1:label} : for ${2:i} in ${3:range} generate\n\t$0\nend generate;",
		"description": "for generate",
		"scope": "source.vhdl"
	},
	"if": {
		"prefix": "if",
		"body": "if ${1:expression} then\n\t$0\nend if;",
		"description": "if",
		"scope": "source.vhdl"
	},
	"ifg": {
		"prefix": "ifg",
		"body": "${1:label}: if ${2:expression} generate\n\t$0\nend generate;",
		"description": "if",
		"scope": "source.vhdl"
	},
	"pack": {
		"prefix": "pack",
		"body": "package ${1:pkg} is\n\t$0\nend package;",
		"description": "package",
		"scope": "source.vhdl"
	},
	"packbody": {
		"prefix": "packbody",
		"body": "package body ${1:pkg} is\n\t$0\nend package body;",
		"description": "package",
		"scope": "source.vhdl"
	},
	"process": {
		"prefix": "process",
		"body": "${1:label} : process\nbegin\n\t$0\nend process;",
		"description": "process",
		"scope": "source.vhdl"
	},
	"process_async": {
		"prefix": "process_async",
		"body": "${1:label} : process(all)\nbegin\n\t$0\nend process;",
		"description": "process",
		"scope": "source.vhdl"
	},
	"process_sync": {
		"prefix": "process_sync",
		"body": "${1:label} : process(${2:clock}, ${3:reset})\nbegin\n\tif rising_edge(${2:clock}) then\n\t\t$0\n\tend if;\n\n\tif ${3:reset} then\n\tend if;\nend process;",
		"description": "process",
		"scope": "source.vhdl"
	},
	"proc": {
		"prefix": "proc",
		"body": "procedure ${1:name}(${2:parameter}) is\nbegin\n\t$0\nend procedure;",
		"description": "procedure",
		"scope": "source.vhdl"
	},
	"while": {
		"prefix": "while",
		"body": "while ${1:expression} loop\n\t$0\nend loop;",
		"description": "while",
		"scope": "source.vhdl"
	}
}