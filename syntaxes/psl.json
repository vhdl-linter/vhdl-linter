{
  "scopeName": "source.psl",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#name"
    },
    {
      "include": "#label"
    },
    {
      "include": "#keyword"
    },
    {
      "include": "#literal"
    },
    {
      "include": "#operator"
    },
    {
      "include": "#label"
    }
  ],
  "repository": {
    "keyword": {
      "match": "(?i)\\b(abs|access|after|alias|all|and|architecture|array|assert|assume|assume_guarantee|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|context|cover|default|disconnect|downto|else|elsif|end|entity|exit|fairness|file|for|force|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|parameter|port|postponed|procedure|process|property|protected|pure|range|record|register|reject|release|rem|report|restrict|restrict_guarantee|return|rol|ror|select|sequence|severity|signal|shared|sla|sll|sra|srl|strong|subtype|then|to|transport|type|unaffected|units|until|use|variable|vmode|vprop|vunit|wait|when|while|with|xnor|xor)\\b",
      "name": "keyword.language.vhdl"
    },
    "comment": {
      "patterns": [
        {
          "match": "--.*",
          "name": "comment.line.double-dash.vhdl"
        },
        {
          "begin": "\\/\\*",
          "end": "\\*\\/",
          "name": "comment.block"
        }
      ]
    },
    "literal": {
      "patterns": [
        {
          "match": "'.'",
          "name": "constant.character.vhdl"
        },
        {
          "match": "(?i)\\b[0-9]+#[0-9a-zA-Z][0-9_a-zA-Z]*(?:\\.[0-9a-zA-Z][0-9_a-zA-Z]+)?#(?:(?:e|E)[+-]?[0-9_]+)?",
          "name": "constant.numeric.vhdl"
        },
        {
          "match": "(?i)\\b-?[0-9_]+(?:\\.[0-9_]+)?(?:(?:e|E)[+-]?[0-9_]+)?\\b",
          "name": "constant.numeric.vhdl"
        },
        {
          "match": "(?i)\\b[0-9]*(?i:B|O|X|UB|UO|UX|SB|SO|SX|D)\".*?\"",
          "name": "constant.numeric.vhdl"
        },
        {
          "match": "(?i)\"[01]*?\"",
          "name": "constant.numeric.vhdl"
        },
        {
          "match": "(?i)\"(?:[^\"]|(?:\"\"))*\"(?!\")",
          "name": "string.quoted.double"
        }
      ]
    },
    "label": {
      "patterns": [
        {
          "match": "(?i)^\\s*(\\w+)\\s*:",
          "captures": {
            "1": {
              "name": "entity.name.label"
            }
          }

        }
      ]
    },
    "operator": {
      "patterns": [
        {
          "match": "(?i)<<|>>",
          "name": "string.quoted.double"
        },
        {
          "match": "(?i)\\|->|\\|=>|=",
          "name": "keyword.operator.relational"
        },
        {
          "match": "(?i)<=|:=|=>",
          "name": "keyword.operator.assignment"
        },
        {
          "match": "(?i)\\*\\*",
          "name": "keyword.operator.arithmetic"
        },
        {
          "match": "(?i)\\/=>=|<>|\\?\\?|\\?=|\\?\\/=|\\/=|\\?<|\\?<=|\\?>|\\?>=|&|'|\\(|\\)|\\*|\\+|,|-|\\/|<|=|>|`|\\||\\[|\\]|\\?|@",
          "name": "keyword.operator"
        }
      ]
    }

  }
}